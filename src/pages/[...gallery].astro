---
import FlipPostcard from '@/components/FlipPostcard.vue';
import Layout from '@/layouts/Layout.astro';

export const prerender = true;

export const getStaticPaths = async () => {
  return [
    { params: { gallery: 'gallery/hunting/big-game/deer' } },
    { params: { gallery: 'gallery/hunting/big-game/bear' } },
    { params: { gallery: 'gallery/hunting/big-game/sheep-goats-etc' } },
    { params: { gallery: 'gallery/hunting/big-game/cats' } },
    { params: { gallery: 'gallery/hunting/big-game/wolves-coyotes' } },
    { params: { gallery: 'gallery/hunting/big-game/alligators' } },
    { params: { gallery: 'gallery/hunting/small-game/rabbits' } },
    { params: { gallery: 'gallery/hunting/small-game/rabbit-round-ups' } },
    { params: { gallery: 'gallery/hunting/small-game/squirrels-skunks-etc' } },
    { params: { gallery: 'gallery/hunting/small-game/frogs-snakes-etc' } },
    { params: { gallery: 'gallery/hunting/small-game/foxes' } },
    { params: { gallery: 'gallery/hunting/birds/ducks' } },
    { params: { gallery: 'gallery/hunting/birds/geese' } },
    { params: { gallery: 'gallery/hunting/birds/upland-game-birds' } },
    { params: { gallery: 'gallery/hunting/birds/other-birds' } },
    { params: { gallery: 'gallery/hunting/huntin-gals' } },
    { params: { gallery: 'gallery/hunting/portraits' } },
    { params: { gallery: 'gallery/hunting/young-hunters' } },
    { params: { gallery: 'gallery/hunting/huntin-dogs' } },
    { params: { gallery: 'gallery/fishing/bass' } },
    { params: { gallery: 'gallery/fishing/carp' } },
    { params: { gallery: 'gallery/fishing/catfish' } },
    { params: { gallery: 'gallery/fishing/florida-studio' } },
    { params: { gallery: 'gallery/fishing/giant-sea-bass' } },
    { params: { gallery: 'gallery/fishing/halibut' } },
    { params: { gallery: 'gallery/fishing/other-fish' } },
    { params: { gallery: 'gallery/fishing/pike-muskie' } },
    { params: { gallery: 'gallery/fishing/stringers' } },
    { params: { gallery: 'gallery/fishing/sturgeon' } },
    { params: { gallery: 'gallery/fishing/tarpon' } },
    { params: { gallery: 'gallery/fishing/trout-salmon' } },
    { params: { gallery: 'gallery/fishing/women-fishing' } },
    { params: { gallery: 'gallery/fishing/young-fishermen' } },
    { params: { gallery: 'gallery/camp-cabin/camp-cabin' } },
    { params: { gallery: 'gallery/camp-cabin/hunting-groups' } },
    { params: { gallery: 'gallery/camp-cabin/fishing-groups' } },
    { params: { gallery: 'gallery/camp-cabin/scenic' } },
    { params: { gallery: 'gallery/tall-tales/hunting' } },
    { params: { gallery: 'gallery/tall-tales/fishing' } },
    { params: { gallery: 'gallery/tall-tales/fakes' } },
  ];
};

const { gallery } = Astro.params;

type CloudinaryImage = {
  asset_id: string;
  public_id: string;
  version: number;
  format: string;
  width: number;
  height: number;
  type: string;
  created_at: string;
};

type CloudinaryListResponse = {
  resources: CloudinaryImage[];
  updated_at: string;
};

const getImagesFromCloudinary = async (_gallery) => {
  const imagesJson = await fetch(
    `https://res.cloudinary.com/all-about-erik/image/list/big-game_deer.json`
  );
  if (!imagesJson.ok) {
    throw new Error('Failed to fetch images from Cloudinary');
  }
  const images = (await imagesJson.json()) as CloudinaryListResponse;
  return images;
};

const images = await getImagesFromCloudinary(gallery);

const sortedImages = images.resources.sort((a, b) =>
  a.public_id.localeCompare(b.public_id)
);
---

<Layout>
  <div class='mx-auto px-4 lg:px-14 py-8'>
    <div
      class='grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 2xl:grid-cols-4 gap-4 lg:gap-14'
    >
      {
        sortedImages.map((image, imageIndex) =>
          sortedImages[imageIndex + 1]?.public_id?.endsWith('a') ? (
            <div class='w-full'>
              <FlipPostcard
                client:only='vue'
                imgFront={encodeURI(
                  `https://res.cloudinary.com/all-about-erik/image/upload/v${image.version}/${image.public_id}.${image.format}`
                )}
                imgBack={encodeURI(
                  `https://res.cloudinary.com/all-about-erik/image/upload/v${sortedImages[imageIndex + 1]?.version}/${sortedImages[imageIndex + 1]?.public_id}.${sortedImages[imageIndex + 1]?.format}`
                )}
                caption={image.public_id
                  .split('/')
                  .pop()
                  ?.split('_')
                  .slice(-2) // take the two last elements
                  .join(' ')}
                captionAlign='left'
                captionContainWithinCard={true}
                seeTheBack={true}
                aspectRatio={`${image.width}/${image.height}`}
                reverseBackDims={
                  image.width === sortedImages[imageIndex + 1].height
                }
              />
            </div>
          ) : image.public_id.endsWith('a') ? undefined : (
            <div class='w-full'>
              <img
                src={encodeURI(
                  `https://res.cloudinary.com/all-about-erik/image/upload/v${image.version}/${image.public_id}.${image.format}`
                )}
                alt='Image'
                class='w-full h-auto object-cover'
              />
              <p class='font-bembo font-normal italic text-14px lg:text-16px pt-2'>
                {image.public_id
                  .split('/')
                  .pop()
                  ?.split('_')
                  .slice(-2) // take the two last elements
                  .join(' ')}
              </p>
            </div>
          )
        )
      }
    </div>
  </div>
</Layout>
